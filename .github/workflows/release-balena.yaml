name: üöÄ Deploy on balena-cloud

on:
  workflow_call:

env:
  NODE_ENV: development

jobs:
  release:
    permissions:
      contents: read
      packages: read

    name: üì§ Create Balena-cloud release
    runs-on: ubuntu-latest
    if: github.repository == 'metalizzsas/nusterkit'
    steps:
      - name: üìö Checkout Repo
        uses: actions/checkout@v3

      - name: ‚õèÔ∏è Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: ‚õèÔ∏è Setup node
        uses: actions/setup-node@v3.4.1
        with:
          node-version: '18.x'
          cache: 'pnpm'

      - name: ‚õ≠ Setup Pnpm github registry
        run: |
          rm .npmrc
          echo "@metalizzsas:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> .npmrc
          echo "link-workspace-packages=false" >> .npmrc
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: üìö Install Node dependencies
        run: pnpm install --frozen-lockfile
        env:
          NODE_ENV: development

      - name: üß± Build typings
        run: pnpm -r --filter='./libs/typings' run build 

      - name: üß± Build libs
        run: pnpm run build:libs

      - name: ‚ùî Get Nuster BalenaCloud version from package.json
        id: get_nuster_version
        run: cat ./packages/nuster/package.json | echo version=$(jq -r '.version') >> $GITHUB_OUTPUT

      - name: üß± Run build scripts on all packages
        run: pnpm run build:packages
        env:
          NODE_ENV: production
          PUBLIC_NUSTER_VERSION: ${{ steps.get_nuster_version.outputs.version }}

      - name: üê≥ Create BalenaCloud Release
        id: balena_release
        uses: balena-io/deploy-to-balena-action@master
        with:
          balena_token: ${{ secrets.BALENA_TOKEN }}
          fleet: romain_sapet/nusterturbine
          finalize: true

      - name: üê≥ Set BalenaCloud Release version
        run: | 
          curl --request PATCH
          --url 'https://api.balena-cloud.com/v6/release($RELEASE_ID)' 
          --header 'Authorization: Bearer $BALENA_TOKEN' 
          --header 'Content-Type: application/json' 
          --data '{"release_version": "$VERSION", "semver": "$VERSION"}'
        env:
          BALENA_TOKEN: ${{ secrets.BALENA_TOKEN }}
          RELEASE_ID: ${{ steps.get_nuster_version.outputs.release_id }}
          VERSION: ${{ steps.balena_release.outputs.version }}

