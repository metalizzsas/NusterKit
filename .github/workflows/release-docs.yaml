name: 🚀 Generate documentation

on:
  workflow_call:
  pull_request:
  
# cancel in-progress runs on new commits to same PR (gitub.event.number)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

jobs:
  docs:

    runs-on: ubuntu-latest
    name: 📚 Generate PDF from Markdown

    strategy:
      matrix:
        docs-paths: [
          "machines/uscleaner-m-1/manual/fr",
          "machines/metalfog-m-2/manual/fr",
          "desktop/fr"
        ] 

    steps:

      - name: 📚 Checkout Repo
        uses: actions/checkout@v3

      - name: ❓ Check if docs should be built
        id: doc-build-check
        run: echo "misc-present="$(grep -rIl "@metalizzsas/nuster-misc" .changeset/) >> $GITHUB_OUTPUT 

      - name: 📂 Create output directory
        if: steps.doc-build-check.outputs.misc-present != ''
        run: mkdir -p libs/misc/documentation/output

      - name: Download latest eisvogel version
        if: steps.doc-build-check.outputs.misc-present != ''
        run: curl https://raw.githubusercontent.com/Wandmalfarbe/pandoc-latex-template/master/eisvogel.tex -o libs/misc/documentation/utils/eisvogel.tex

      - name: 📝 Generate pdf for all docs
        if: steps.doc-build-check.outputs.misc-present != ''
        uses: docker://pandoc/extra:3.1
        with:
          args: "-d libs/misc/documentation/${{ matrix.docs-paths }}/export.yaml --template libs/misc/documentation/utils/eisvogel.tex"
          
      - name: 📦 Upload pdf to artifacts
        if: github.event_name == 'pull_request' && steps.doc-build-check.outputs.misc-present != ''
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: libs/misc/documentation/output/

      - name: ❓ Find first pdf file of folder
        if: github.event_name == 'workflow_call' && steps.doc-build-check.outputs.misc-present != ''
        id: find_pdf
        run: |
          echo "pdf-path="$(find libs/misc/documentation/output -type f -name '*.pdf' -print -quit) >> $GITHUB_OUTPUT &&
          echo "pdf-name="$(find libs/misc/documentation/output -type f -name '*.pdf' -printf "%f\n") >> $GITHUB_OUTPUT

      - name: 📖 Parse package.json
        if: github.event_name == 'workflow_call' && steps.doc-build-check.outputs.misc-present != ''
        id: get_misc_version
        run: |
          echo "misc-version="$(cat libs/misc/package.json | jq -r '.version') >> $GITHUB_OUTPUT

      - name: ⛭ Get nuster-misc latest tag
        if: github.event_name == 'workflow_call' && steps.doc-build-check.outputs.misc-present != ''
        id: get_tag_id
        run: |
          curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token $GH_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/metalizzsas/nusterkit/releases/tags/@metalizzsas/nuster-misc@$MISC_VERSION | echo "tag-id="$(jq -r '.id') >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MISC_VERSION: ${{ steps.get_misc_version.outputs.misc-version }}

      - name: 📦 Upload pdf to release
        if: github.event_name == 'workflow_call' && steps.doc-build-check.outputs.misc-present != ''
        run: |
          curl -L \
          -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token $GH_TOKEN" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Content-Type: application/octet-stream" \
          https://uploads.github.com/repos/metalizzsas/nusterkit/releases/$RELEASE_ID/assets?name=$FILE_NAME \
          --data-binary "@$FILE_PATH"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_ID: ${{ steps.get_tag_id.outputs.tag-id }}
          FILE_PATH: ${{ steps.find_pdf.outputs.pdf-path }}
          FILE_NAME: ${{ steps.find_pdf.outputs.pdf-name }}