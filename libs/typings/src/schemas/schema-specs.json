{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "AllProgramBlocks": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "description": "**For Loop** Runs blocks util *limit* is reached.",
                    "properties": {
                        "for": {
                            "additionalProperties": false,
                            "properties": {
                                "blocks": {
                                    "items": {
                                        "$ref": "#/definitions/AllProgramBlocks"
                                    },
                                    "type": "array"
                                },
                                "limit": {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                }
                            },
                            "required": [
                                "blocks",
                                "limit"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "for"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "description": "**If Statement** Runs *true_blocks* if *left_side* compared to *right_side* by *comparator* is true otherwise runs *false_blocks*.",
                    "properties": {
                        "if": {
                            "additionalProperties": false,
                            "properties": {
                                "false_blocks": {
                                    "items": {
                                        "$ref": "#/definitions/AllProgramBlocks"
                                    },
                                    "type": "array"
                                },
                                "statement": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "comparator": {
                                            "$ref": "#/definitions/Comparators"
                                        },
                                        "left_side": {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        },
                                        "right_side": {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        }
                                    },
                                    "required": [
                                        "comparator",
                                        "left_side",
                                        "right_side"
                                    ],
                                    "type": "object"
                                },
                                "true_blocks": {
                                    "items": {
                                        "$ref": "#/definitions/AllProgramBlocks"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "statement",
                                "true_blocks"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "if"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "description": "**While Loop** Runs *blocks* until *left_side* compared to *right_side* by *comparator* is false.",
                    "properties": {
                        "while": {
                            "additionalProperties": false,
                            "properties": {
                                "blocks": {
                                    "items": {
                                        "$ref": "#/definitions/AllProgramBlocks"
                                    },
                                    "type": "array"
                                },
                                "statement": {
                                    "additionalProperties": false,
                                    "properties": {
                                        "comparator": {
                                            "$ref": "#/definitions/Comparators"
                                        },
                                        "left_side": {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        },
                                        "right_side": {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        }
                                    },
                                    "required": [
                                        "comparator",
                                        "left_side",
                                        "right_side"
                                    ],
                                    "type": "object"
                                }
                            },
                            "required": [
                                "blocks",
                                "statement"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "while"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "description": "**Sleep** Will wait the amount of time supplied.",
                    "properties": {
                        "sleep": {
                            "$ref": "#/definitions/NumericParameterBlocks"
                        }
                    },
                    "required": [
                        "sleep"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "description": "**Stop** Will stop the cycle with the reason supplied.",
                    "properties": {
                        "stop": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "stop"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "description": "**Variable** Will set the *[0] Variable name* to *[1] Variable value*.",
                    "properties": {
                        "set_var": {
                            "items": [
                                {
                                    "$ref": "#/definitions/StringParameterBlocks"
                                },
                                {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "required": [
                        "set_var"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "start_timer": {
                            "additionalProperties": false,
                            "properties": {
                                "blocks": {
                                    "items": {
                                        "$ref": "#/definitions/AllProgramBlocks"
                                    },
                                    "type": "array"
                                },
                                "timer_interval": {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                },
                                "timer_name": {
                                    "$ref": "#/definitions/StringParameterBlocks"
                                }
                            },
                            "required": [
                                "blocks",
                                "timer_interval",
                                "timer_name"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "start_timer"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "stop_timer": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "stop_timer"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "load_container": {
                            "items": [
                                {
                                    "$ref": "#/definitions/StringParameterBlocks"
                                },
                                {
                                    "$ref": "#/definitions/StringParameterBlocks"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "required": [
                        "load_container"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "unload_container": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "unload_container"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "io_write": {
                            "items": [
                                {
                                    "$ref": "#/definitions/StringParameterBlocks"
                                },
                                {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "required": [
                        "io_write"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "append_maintenance": {
                            "items": [
                                {
                                    "$ref": "#/definitions/StringParameterBlocks"
                                },
                                {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "required": [
                        "append_maintenance"
                    ],
                    "type": "object"
                }
            ],
            "description": "All Program blocks"
        },
        "Comparators": {
            "enum": [
                "!=",
                "!==",
                "<",
                "<=",
                "==",
                "===",
                ">",
                ">="
            ],
            "type": "string"
        },
        "Container": {
            "additionalProperties": false,
            "description": "Slot definition used in config",
            "properties": {
                "callToAction": {
                    "description": "Call to action, For UI Purposes only",
                    "items": {
                        "additionalProperties": false,
                        "description": "Call to action inteface",
                        "properties": {
                            "APIEndpoint": {
                                "additionalProperties": false,
                                "description": "API Endpoint to be reached by the CTA (NusterTurbine Endpoints)",
                                "properties": {
                                    "body": {},
                                    "method": {
                                        "description": "HTTP Request Method",
                                        "enum": [
                                            "delete",
                                            "get",
                                            "post",
                                            "put"
                                        ],
                                        "type": "string"
                                    },
                                    "url": {
                                        "description": "URL Reached",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "method",
                                    "url"
                                ],
                                "type": "object"
                            },
                            "UIEndpoint": {
                                "description": "UIEndpoint reached by the CTA (NusterDesktop Endpoints)",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of this CTA",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Slots name",
                    "type": "string"
                },
                "regulations": {
                    "description": "Regulation attached to this container",
                    "items": {
                        "$ref": "#/definitions/ContainerRegulation"
                    },
                    "type": "array"
                },
                "sensors": {
                    "description": "Sensors available for this Slots",
                    "items": {
                        "$ref": "#/definitions/ContainerSensor"
                    },
                    "type": "array"
                },
                "supportedProductSeries": {
                    "description": "Supported product series. If defined slot is `Productable`",
                    "items": {
                        "$ref": "#/definitions/ProductSeries"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Slot type",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "type": "object"
        },
        "ContainerRegulation": {
            "additionalProperties": false,
            "description": "Container regulation",
            "properties": {
                "active": {
                    "description": "Actuators always active (ex: `pump` for `uscleaner/m/0 - temperature-control`)",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "maxTarget": {
                    "description": "Max target is the maximum setable value for this regulation",
                    "type": "number"
                },
                "minus": {
                    "description": "Actuators used to reach target when we are over target",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Regulation name",
                    "type": "string"
                },
                "plus": {
                    "description": "Actuators used to reach target when we are under target",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "security": {
                    "description": "Regulation Security thats stops it",
                    "items": {
                        "anyOf": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "name",
                                    "value"
                                ],
                                "type": "object"
                            },
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "valueDiff": {
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "name",
                                    "valueDiff"
                                ],
                                "type": "object"
                            }
                        ]
                    },
                    "type": "array"
                },
                "securityMax": {
                    "description": "Security max is the maximum admissible value from the sensor read, will disable regulation if went over",
                    "type": "number"
                },
                "sensor": {
                    "description": "Sensor used by this regulation",
                    "type": "string"
                },
                "target": {
                    "description": "Base target",
                    "type": "number"
                }
            },
            "required": [
                "active",
                "maxTarget",
                "minus",
                "name",
                "plus",
                "security",
                "securityMax",
                "sensor",
                "target"
            ],
            "type": "object"
        },
        "ContainerSensor": {
            "additionalProperties": false,
            "description": "Slot Sensor interface",
            "properties": {
                "io": {
                    "description": "IO gate name of this sensor",
                    "type": "string"
                },
                "logic": {
                    "description": "Attached Logic",
                    "enum": [
                        "level-limit-max",
                        "level-max",
                        "level-min",
                        "presence"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "io"
            ],
            "type": "object"
        },
        "HomeInfo": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "type": "string"
                        },
                        "type": {
                            "const": "io",
                            "type": "string"
                        }
                    },
                    "required": [
                        "path",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "items": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        "type": {
                            "const": "container.regulation.state",
                            "type": "string"
                        }
                    },
                    "required": [
                        "path",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "path": {
                            "items": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        },
                        "type": {
                            "const": "container.regulation.target",
                            "type": "string"
                        }
                    },
                    "required": [
                        "path",
                        "type"
                    ],
                    "type": "object"
                }
            ]
        },
        "IOGates": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "address": {
                            "description": "Address on the automaton address range",
                            "type": "number"
                        },
                        "bus": {
                            "description": "Gate bus",
                            "enum": [
                                "in",
                                "out"
                            ],
                            "type": "string"
                        },
                        "controllerId": {
                            "description": "Automaton where this gate is available",
                            "type": "number"
                        },
                        "default": {
                            "description": "Default value of this gate",
                            "type": "number"
                        },
                        "name": {
                            "description": "Gate name",
                            "type": "string"
                        },
                        "size": {
                            "description": "Gate controller data size",
                            "enum": [
                                "bit",
                                "word"
                            ],
                            "type": "string"
                        },
                        "type": {
                            "description": "Gate type",
                            "enum": [
                                "default",
                                "mapped",
                                "pt100"
                            ],
                            "type": "string"
                        },
                        "unity": {
                            "description": "Unity used by this gate",
                            "type": "string"
                        }
                    },
                    "required": [
                        "address",
                        "bus",
                        "controllerId",
                        "default",
                        "name",
                        "size",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "address": {
                            "description": "Address on the automaton address range",
                            "type": "number"
                        },
                        "bus": {
                            "description": "Gate bus",
                            "enum": [
                                "in",
                                "out"
                            ],
                            "type": "string"
                        },
                        "controllerId": {
                            "description": "Automaton where this gate is available",
                            "type": "number"
                        },
                        "default": {
                            "description": "Default value of this gate",
                            "type": "number"
                        },
                        "mapInMax": {
                            "description": "Mapped input max data, from IOController",
                            "type": "number"
                        },
                        "mapInMin": {
                            "description": "Mapped input min data, from IO Controller",
                            "type": "number"
                        },
                        "mapOutMax": {
                            "description": "Mapped output max data, to Human",
                            "type": "number"
                        },
                        "mapOutMin": {
                            "description": "Mapped output min data, to Human",
                            "type": "number"
                        },
                        "name": {
                            "description": "Gate name",
                            "type": "string"
                        },
                        "size": {
                            "description": "Gate controller data size",
                            "enum": [
                                "bit",
                                "word"
                            ],
                            "type": "string"
                        },
                        "type": {
                            "description": "Gate type",
                            "enum": [
                                "default",
                                "mapped",
                                "pt100"
                            ],
                            "type": "string"
                        },
                        "unity": {
                            "description": "Unity used by this gate",
                            "type": "string"
                        }
                    },
                    "required": [
                        "address",
                        "bus",
                        "controllerId",
                        "default",
                        "mapOutMax",
                        "mapOutMin",
                        "name",
                        "size",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "address": {
                            "description": "Address on the automaton address range",
                            "type": "number"
                        },
                        "bus": {
                            "description": "Gate bus",
                            "enum": [
                                "in",
                                "out"
                            ],
                            "type": "string"
                        },
                        "controllerId": {
                            "description": "Automaton where this gate is available",
                            "type": "number"
                        },
                        "default": {
                            "description": "Default value of this gate",
                            "type": "number"
                        },
                        "name": {
                            "description": "Gate name",
                            "type": "string"
                        },
                        "size": {
                            "description": "Gate controller data size",
                            "enum": [
                                "bit",
                                "word"
                            ],
                            "type": "string"
                        },
                        "type": {
                            "description": "Gate type",
                            "enum": [
                                "default",
                                "mapped",
                                "pt100"
                            ],
                            "type": "string"
                        },
                        "unity": {
                            "description": "Unity used by this gate",
                            "type": "string"
                        }
                    },
                    "required": [
                        "address",
                        "bus",
                        "controllerId",
                        "default",
                        "name",
                        "size",
                        "type",
                        "unity"
                    ],
                    "type": "object"
                }
            ],
            "description": "Available Spec gates"
        },
        "IOHandlers": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "ioScannerInterval": {
                            "description": "IOScannerInterval",
                            "type": "number"
                        },
                        "ip": {
                            "description": "IP Address on the local network",
                            "type": "string"
                        },
                        "size": {
                            "description": "Corresponding size of the EX260 (either 16 outputs or 32 outputs)",
                            "enum": [
                                16,
                                32
                            ],
                            "type": "number"
                        },
                        "type": {
                            "description": "Type of the IO Handler",
                            "type": "string"
                        }
                    },
                    "required": [
                        "ip",
                        "size",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "ioScannerInterval": {
                            "description": "IOScannerInterval",
                            "type": "number"
                        },
                        "ip": {
                            "description": "IP Address on the local network",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of the IO Handler",
                            "type": "string"
                        }
                    },
                    "required": [
                        "ip",
                        "type"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "baudRate": {
                            "description": "BaudRate used to communicate",
                            "type": "number"
                        },
                        "ioScannerInterval": {
                            "description": "IOScannerInterval",
                            "type": "number"
                        },
                        "ip": {
                            "description": "IP Address on the local network",
                            "type": "string"
                        },
                        "port": {
                            "description": "Port of serial device ex: `/dev/tty1`",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of the IO Handler",
                            "type": "string"
                        }
                    },
                    "required": [
                        "baudRate",
                        "ip",
                        "port",
                        "type"
                    ],
                    "type": "object"
                }
            ]
        },
        "Maintenances": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "durationLimit": {
                            "description": "When this duration is reached maitnenance is due",
                            "type": "number"
                        },
                        "durationType": {
                            "description": "Duration type of this maintenance task",
                            "enum": [
                                "cycle",
                                "duration",
                                "sensor"
                            ],
                            "type": "string"
                        },
                        "name": {
                            "description": "Maintenance task name",
                            "type": "string"
                        },
                        "operationDate": {
                            "description": "Last operation date",
                            "type": "number"
                        }
                    },
                    "required": [
                        "durationLimit",
                        "durationType",
                        "name"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "durationType": {
                            "description": "Duration type of this maintenance task",
                            "enum": [
                                "cycle",
                                "duration",
                                "sensor"
                            ],
                            "type": "string"
                        },
                        "name": {
                            "description": "Maintenance task name",
                            "type": "string"
                        },
                        "operationDate": {
                            "description": "Last operation date",
                            "type": "number"
                        },
                        "requireEnableGate": {
                            "description": "Gate needed to check maitnenance task",
                            "type": "string"
                        },
                        "sensorBaseValue": {
                            "description": "When this value is reached on sensor means that maintenance task has been done",
                            "type": "number"
                        },
                        "sensorGate": {
                            "description": "Sensor gate to check",
                            "type": "string"
                        },
                        "sensorLimitValue": {
                            "description": "When this value is reached on sensor maintenance is due",
                            "type": "number"
                        }
                    },
                    "required": [
                        "durationType",
                        "name",
                        "sensorBaseValue",
                        "sensorGate",
                        "sensorLimitValue"
                    ],
                    "type": "object"
                }
            ],
            "description": "All Maintenances types"
        },
        "NumericParameterBlocks": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "description": "here are all the Parameter blocks definitions, they can be used in the machine specs.json file to define cycles.",
                    "properties": {
                        "add": {
                            "items": {
                                "$ref": "#/definitions/NumericParameterBlocks"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "add"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "sub": {
                            "items": [
                                {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                },
                                {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "required": [
                        "sub"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "multiply": {
                            "items": {
                                "$ref": "#/definitions/NumericParameterBlocks"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "multiply"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "divide": {
                            "items": [
                                {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                },
                                {
                                    "$ref": "#/definitions/NumericParameterBlocks"
                                }
                            ],
                            "maxItems": 2,
                            "minItems": 2,
                            "type": "array"
                        }
                    },
                    "required": [
                        "divide"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "reverse": {
                            "$ref": "#/definitions/NumericParameterBlocks"
                        }
                    },
                    "required": [
                        "reverse"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "conditional": {
                            "additionalProperties": false,
                            "properties": {
                                "comparator": {
                                    "$ref": "#/definitions/Comparators"
                                },
                                "left_side": {
                                    "items": [
                                        {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        },
                                        {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        }
                                    ],
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array"
                                },
                                "right_side": {
                                    "items": [
                                        {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        },
                                        {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        }
                                    ],
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array"
                                }
                            },
                            "required": [
                                "comparator",
                                "left_side",
                                "right_side"
                            ],
                            "type": "object"
                        }
                    },
                    "required": [
                        "conditional"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "number": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "number"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "io_read": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "io_read"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "profile": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "profile"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "read_var": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "read_var"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "read_machine_var": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "read_machine_var"
                    ],
                    "type": "object"
                },
                {
                    "type": "number"
                }
            ]
        },
        "PBRStep": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "description": "Program blocks Array that is executed by this step",
                    "items": {
                        "$ref": "#/definitions/AllProgramBlocks"
                    },
                    "type": "array"
                },
                "crashStepFallback": {
                    "description": "Step to goto on soft end",
                    "type": "number"
                },
                "endBlocks": {
                    "description": "Program Blocks array that are executed at the end of a step",
                    "items": {
                        "$ref": "#/definitions/AllProgramBlocks"
                    },
                    "type": "array"
                },
                "isEnabled": {
                    "$ref": "#/definitions/NumericParameterBlocks",
                    "description": "Parameter block that indicates if this step is enabled in the PBR flow"
                },
                "name": {
                    "description": "Program Step name",
                    "type": "string"
                },
                "partialStepFallback": {
                    "description": "Partial end step fallback",
                    "type": "number"
                },
                "runAmount": {
                    "$ref": "#/definitions/NumericParameterBlocks",
                    "description": "Optional Parameter block that tells the PBR if this steps must be runt multiple times"
                },
                "runConditions": {
                    "description": "Step run conditions, theeses runConditions triggers Soft End Strategy if defined, otherwise, runs hard end strategy",
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "checkchain": {
                                "additionalProperties": false,
                                "description": "Checkchain used to validate status",
                                "properties": {
                                    "io": {
                                        "additionalProperties": false,
                                        "properties": {
                                            "gateName": {
                                                "type": "string"
                                            },
                                            "gateValue": {
                                                "type": "number"
                                            }
                                        },
                                        "required": [
                                            "gateName",
                                            "gateValue"
                                        ],
                                        "type": "object"
                                    },
                                    "parameter": {
                                        "$ref": "#/definitions/StatusParameterBlocks"
                                    }
                                },
                                "type": "object"
                            },
                            "disabled": {
                                "$ref": "#/definitions/NumericParameterBlocks",
                                "description": "Parameter that disables this runCondition"
                            },
                            "name": {
                                "description": "Name of the run condition, used for reference",
                                "type": "string"
                            },
                            "startOnly": {
                                "description": "Is the condition only used at start",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "checkchain",
                            "name",
                            "startOnly"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "startBlocks": {
                    "description": "Program Blocks array that are executed at the start of a step",
                    "items": {
                        "$ref": "#/definitions/AllProgramBlocks"
                    },
                    "type": "array"
                }
            },
            "required": [
                "blocks",
                "endBlocks",
                "isEnabled",
                "name",
                "startBlocks"
            ],
            "type": "object"
        },
        "Popup": {
            "additionalProperties": false,
            "description": "Popup message",
            "properties": {
                "callToActions": {
                    "description": "Call to actions of this popup.",
                    "items": {
                        "additionalProperties": false,
                        "description": "Call to action inteface",
                        "properties": {
                            "APIEndpoint": {
                                "additionalProperties": false,
                                "description": "API Endpoint to be reached by the CTA (NusterTurbine Endpoints)",
                                "properties": {
                                    "body": {},
                                    "method": {
                                        "description": "HTTP Request Method",
                                        "enum": [
                                            "delete",
                                            "get",
                                            "post",
                                            "put"
                                        ],
                                        "type": "string"
                                    },
                                    "url": {
                                        "description": "URL Reached",
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "method",
                                    "url"
                                ],
                                "type": "object"
                            },
                            "UIEndpoint": {
                                "description": "UIEndpoint reached by the CTA (NusterDesktop Endpoints)",
                                "type": "string"
                            },
                            "name": {
                                "description": "Name of this CTA",
                                "type": "string"
                            }
                        },
                        "required": [
                            "name"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                },
                "level": {
                    "description": "Level of this popup",
                    "enum": [
                        "error",
                        "info",
                        "warn"
                    ],
                    "type": "string"
                },
                "message": {
                    "description": "i18n message, body of this popup",
                    "type": "string"
                },
                "payload": {
                    "$ref": "#/definitions/Record<string,string>",
                    "description": "Translation payloads"
                },
                "title": {
                    "description": "i18n text, title of this pop up",
                    "type": "string"
                }
            },
            "required": [
                "level",
                "message",
                "title"
            ],
            "type": "object"
        },
        "ProductSeries": {
            "description": "Product series available with machines",
            "enum": [
                "any",
                "cr-01",
                "cv-01",
                "llc_ox",
                "llc_rd",
                "mv-01",
                "sv-01",
                "usl_act",
                "usl_ox",
                "usl_rd",
                "water"
            ],
            "type": "string"
        },
        "Profile": {
            "additionalProperties": false,
            "description": "Profile schema from configuration",
            "properties": {
                "_id": {
                    "description": "Premade profile have id",
                    "type": "string"
                },
                "isPremade": {
                    "description": "Is the profile premade ?",
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the profile",
                    "type": "string"
                },
                "skeleton": {
                    "description": "Name of the referencing skeleton profile",
                    "type": "string"
                },
                "values": {
                    "additionalProperties": {
                        "type": "number"
                    },
                    "description": "Values of the profile",
                    "type": "object"
                }
            },
            "required": [
                "name",
                "skeleton",
                "values"
            ],
            "type": "object"
        },
        "ProfileSkeleton": {
            "additionalProperties": false,
            "properties": {
                "fields": {
                    "description": "Fields definitions contained by this skeleton",
                    "items": {
                        "$ref": "#/definitions/ProfileSkeletonFields"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Identifier name of the skeleton",
                    "type": "string"
                }
            },
            "required": [
                "fields",
                "name"
            ],
            "type": "object"
        },
        "ProfileSkeletonFields": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "detailsShown": {
                            "description": "Is Profile Field hidden",
                            "type": "boolean"
                        },
                        "floatMax": {
                            "type": "number"
                        },
                        "floatMin": {
                            "type": "number"
                        },
                        "floatStep": {
                            "type": "number"
                        },
                        "name": {
                            "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of the profile field",
                            "enum": [
                                "bool",
                                "float",
                                "incremental",
                                "int",
                                "time"
                            ],
                            "type": "string"
                        },
                        "unity": {
                            "description": "Unity of the profile field, it used for UI purposes only",
                            "type": "string"
                        },
                        "value": {
                            "description": "Value contained byt the profile field",
                            "type": "number"
                        }
                    },
                    "required": [
                        "floatMax",
                        "floatMin",
                        "floatStep",
                        "name",
                        "type",
                        "value"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "detailsShown": {
                            "description": "Is Profile Field hidden",
                            "type": "boolean"
                        },
                        "name": {
                            "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of the profile field",
                            "enum": [
                                "bool",
                                "float",
                                "incremental",
                                "int",
                                "time"
                            ],
                            "type": "string"
                        },
                        "unity": {
                            "description": "Unity of the profile field, it used for UI purposes only",
                            "type": "string"
                        },
                        "value": {
                            "description": "Value contained byt the profile field",
                            "type": "number"
                        }
                    },
                    "required": [
                        "name",
                        "type",
                        "value"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "detailsShown": {
                            "description": "Is Profile Field hidden",
                            "type": "boolean"
                        },
                        "name": {
                            "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of the profile field",
                            "enum": [
                                "bool",
                                "float",
                                "incremental",
                                "int",
                                "time"
                            ],
                            "type": "string"
                        },
                        "unity": {
                            "description": "Unity of the profile field, it used for UI purposes only",
                            "type": "string"
                        },
                        "value": {
                            "description": "Value contained byt the profile field",
                            "type": "number"
                        }
                    },
                    "required": [
                        "name",
                        "type",
                        "value"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "detailsShown": {
                            "description": "Is Profile Field hidden",
                            "type": "boolean"
                        },
                        "name": {
                            "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                            "type": "string"
                        },
                        "type": {
                            "description": "Type of the profile field",
                            "enum": [
                                "bool",
                                "float",
                                "incremental",
                                "int",
                                "time"
                            ],
                            "type": "string"
                        },
                        "units": {
                            "items": {
                                "enum": [
                                    "hours",
                                    "milliseconds",
                                    "minutes",
                                    "seconds"
                                ],
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "unity": {
                            "description": "Unity of the profile field, it used for UI purposes only",
                            "type": "string"
                        },
                        "value": {
                            "description": "Value contained byt the profile field",
                            "type": "number"
                        }
                    },
                    "required": [
                        "name",
                        "type",
                        "units",
                        "value"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "baseValue": {
                            "type": "number"
                        },
                        "detailsShown": {
                            "description": "Is Profile Field hidden",
                            "type": "boolean"
                        },
                        "incrementalRangeMax": {
                            "type": "number"
                        },
                        "incrementalRangeMin": {
                            "type": "number"
                        },
                        "name": {
                            "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                            "type": "string"
                        },
                        "type": {
                            "const": "incremental",
                            "type": "string"
                        },
                        "unity": {
                            "description": "Unity of the profile field, it used for UI purposes only",
                            "type": "string"
                        },
                        "value": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "baseValue",
                        "incrementalRangeMax",
                        "incrementalRangeMin",
                        "name",
                        "type",
                        "value"
                    ],
                    "type": "object"
                }
            ],
            "description": "Base profile skeletons fields types"
        },
        "Record<string,string>": {
            "additionalProperties": false,
            "type": "object"
        },
        "StatusParameterBlocks": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "maintenance_status": {
                            "anyOf": [
                                {
                                    "additionalProperties": false,
                                    "properties": {
                                        "string": {
                                            "type": "string"
                                        }
                                    },
                                    "required": [
                                        "string"
                                    ],
                                    "type": "object"
                                },
                                {
                                    "items": [
                                        {
                                            "$ref": "#/definitions/StringParameterBlocks"
                                        },
                                        {
                                            "$ref": "#/definitions/NumericParameterBlocks"
                                        }
                                    ],
                                    "maxItems": 2,
                                    "minItems": 2,
                                    "type": "array"
                                },
                                {
                                    "type": "string"
                                }
                            ]
                        }
                    },
                    "required": [
                        "maintenance_status"
                    ],
                    "type": "object"
                },
                {
                    "additionalProperties": false,
                    "properties": {
                        "product_status": {
                            "$ref": "#/definitions/StringParameterBlocks"
                        }
                    },
                    "required": [
                        "product_status"
                    ],
                    "type": "object"
                }
            ]
        },
        "StringParameterBlocks": {
            "anyOf": [
                {
                    "additionalProperties": false,
                    "properties": {
                        "string": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "string"
                    ],
                    "type": "object"
                },
                {
                    "type": "string"
                }
            ]
        }
    },
    "description": "Machine JSON Specifications",
    "properties": {
        "$schema": {
            "description": "Schema used by the configuration file",
            "type": "string"
        },
        "addons": {
            "description": "Addons available on this machine",
            "items": {
                "additionalProperties": false,
                "description": "Addon",
                "properties": {
                    "addonName": {
                        "description": "Addon name, should be the same as the Json file holding him",
                        "type": "string"
                    },
                    "content": {
                        "description": "Addon content Array",
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "content": {
                                    "description": "Content replaced or inserted to this category"
                                },
                                "mode": {
                                    "description": "Insertion mode",
                                    "enum": [
                                        "merge",
                                        "replace",
                                        "set"
                                    ],
                                    "type": "string"
                                },
                                "path": {
                                    "description": "Path were the content is added",
                                    "type": "string"
                                }
                            },
                            "required": [
                                "content",
                                "mode",
                                "path"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "addonName",
                    "content"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "containers": {
            "description": "Product slots definition",
            "items": {
                "$ref": "#/definitions/Container"
            },
            "type": "array"
        },
        "cyclePremades": {
            "description": "Cycle premades definition",
            "items": {
                "additionalProperties": false,
                "properties": {
                    "cycle": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    }
                },
                "required": [
                    "cycle",
                    "name"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "cycleTypes": {
            "description": "Cycle types definition",
            "items": {
                "additionalProperties": false,
                "properties": {
                    "additionalInfo": {
                        "description": "AddtionalInfo is an array of Gate names that are displayed when the cycle is running",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "type": "string"
                    },
                    "profileRequired": {
                        "type": "boolean"
                    },
                    "runConditions": {
                        "items": {
                            "additionalProperties": false,
                            "properties": {
                                "checkchain": {
                                    "additionalProperties": false,
                                    "description": "Checkchain used to validate status",
                                    "properties": {
                                        "io": {
                                            "additionalProperties": false,
                                            "properties": {
                                                "gateName": {
                                                    "type": "string"
                                                },
                                                "gateValue": {
                                                    "type": "number"
                                                }
                                            },
                                            "required": [
                                                "gateName",
                                                "gateValue"
                                            ],
                                            "type": "object"
                                        },
                                        "parameter": {
                                            "$ref": "#/definitions/StatusParameterBlocks"
                                        }
                                    },
                                    "type": "object"
                                },
                                "disabled": {
                                    "$ref": "#/definitions/NumericParameterBlocks",
                                    "description": "Parameter that disables this runCondition"
                                },
                                "name": {
                                    "description": "Name of the run condition, used for reference",
                                    "type": "string"
                                },
                                "startOnly": {
                                    "description": "Is the condition only used at start",
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "checkchain",
                                "name",
                                "startOnly"
                            ],
                            "type": "object"
                        },
                        "type": "array"
                    },
                    "steps": {
                        "items": {
                            "$ref": "#/definitions/PBRStep"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "name",
                    "profileRequired",
                    "runConditions",
                    "steps"
                ],
                "type": "object"
            },
            "type": "array"
        },
        "iogates": {
            "description": "IOGates definition",
            "items": {
                "$ref": "#/definitions/IOGates"
            },
            "type": "array"
        },
        "iohandlers": {
            "description": "IOHandler definitions",
            "items": {
                "$ref": "#/definitions/IOHandlers"
            },
            "type": "array"
        },
        "maintenance": {
            "description": "Maintenance tasks definition",
            "items": {
                "$ref": "#/definitions/Maintenances"
            },
            "type": "array"
        },
        "nuster": {
            "additionalProperties": false,
            "description": "Nuster Additional data",
            "properties": {
                "connectPopup": {
                    "$ref": "#/definitions/Popup",
                    "description": "Connect popup is triggered when the user logs on for the first time"
                },
                "homeInformations": {
                    "description": "Home screen informations, path of the data to be fetched, should only be reactive data such as io or containers",
                    "items": {
                        "$ref": "#/definitions/HomeInfo"
                    },
                    "type": "array"
                }
            },
            "type": "object"
        },
        "profilePremades": {
            "description": "Premade profile definition",
            "items": {
                "$ref": "#/definitions/Profile"
            },
            "type": "array"
        },
        "profileSkeletons": {
            "description": "Profile skeletons definition",
            "items": {
                "$ref": "#/definitions/ProfileSkeleton"
            },
            "type": "array"
        },
        "variables": {
            "description": "Supported machine variables",
            "items": {
                "type": "string"
            },
            "type": "array"
        }
    },
    "required": [
        "$schema",
        "containers",
        "cyclePremades",
        "cycleTypes",
        "iogates",
        "iohandlers",
        "maintenance",
        "profilePremades",
        "profileSkeletons",
        "variables"
    ],
    "type": "object"
}

