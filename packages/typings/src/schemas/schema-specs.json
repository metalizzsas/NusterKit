{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "EProductSeries": {
            "description": "Product series \nTODO Make this only available for offline devices",
            "enum": [
                "bc",
                "cr",
                "llc",
                "tc",
                "usl",
                "wr"
            ],
            "type": "string"
        },
        "ESlotSensorType": {
            "description": "Slot sensor type",
            "enum": [
                "level-a",
                "level-max-n",
                "level-min-n",
                "level-np",
                "temperature"
            ],
            "type": "string"
        },
        "IAdditionParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "add"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/INumericParameterBlock",
                        "description": "Parameter Blocks that return a number from data()"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IAddon": {
            "additionalProperties": false,
            "properties": {
                "addonName": {
                    "description": "Addon name, should be the same as the Json file holding him",
                    "type": "string"
                },
                "content": {
                    "description": "Addon content Array",
                    "items": {
                        "additionalProperties": false,
                        "properties": {
                            "content": {
                                "description": "Content replaced or inserted to this category"
                            },
                            "mode": {
                                "description": "Insertion mode",
                                "enum": [
                                    "merge",
                                    "replace"
                                ],
                                "type": "string"
                            },
                            "path": {
                                "description": "Path were the content is added",
                                "type": "string"
                            }
                        },
                        "required": [
                            "content",
                            "mode",
                            "path"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "addonName",
                "content"
            ],
            "type": "object"
        },
        "ICallToAction": {
            "additionalProperties": false,
            "description": "Call to action inteface",
            "properties": {
                "APIEndpoint": {
                    "additionalProperties": false,
                    "description": "API Endpoint to be reached by the CTA (NusterTurbine Endpoints)",
                    "properties": {
                        "method": {
                            "description": "HTTP Request Method",
                            "enum": [
                                "delete",
                                "get",
                                "post",
                                "put"
                            ],
                            "type": "string"
                        },
                        "url": {
                            "description": "URL Reached",
                            "type": "string"
                        }
                    },
                    "required": [
                        "method",
                        "url"
                    ],
                    "type": "object"
                },
                "UIEndpoint": {
                    "description": "UIEndpoint reached by the CTA (NusterDesktop Endpoints)",
                    "type": "string"
                },
                "name": {
                    "description": "Name of this CTA",
                    "type": "string"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "IConditionalParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "conditional"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": [
                        {
                            "$ref": "#/definitions/INumericParameterBlock"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock"
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IAdditionParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IConditionalParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IConstantParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IIOReadParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IMaintenanceParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IMultiplyParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IProfileParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IReverseParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotLifetimeParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IVariableParameterBlock"
                                }
                            ]
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IAdditionParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IConditionalParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IConstantParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IIOReadParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IMaintenanceParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IMultiplyParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IProfileParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IReverseParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotLifetimeParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/IVariableParameterBlock"
                                }
                            ]
                        }
                    ],
                    "maxItems": 4,
                    "minItems": 4,
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "enum": [
                        "!=",
                        "<",
                        "==",
                        ">"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "name",
                "params",
                "value"
            ],
            "type": "object"
        },
        "IConfigMaintenance": {
            "additionalProperties": false,
            "description": "Maintenance configuration base object",
            "properties": {
                "durationLimit": {
                    "description": "Duration limit of this maintenance task",
                    "type": "number"
                },
                "durationType": {
                    "description": "Duration type of this maintenance task",
                    "type": "string"
                },
                "name": {
                    "description": "Maintenance task name",
                    "type": "string"
                },
                "procedure": {
                    "$ref": "#/definitions/IMaintenanceProcedure",
                    "description": "Maintenance procedure"
                }
            },
            "required": [
                "durationLimit",
                "durationType",
                "name"
            ],
            "type": "object"
        },
        "IConfigManualMode": {
            "additionalProperties": false,
            "properties": {
                "analogScale": {
                    "additionalProperties": false,
                    "description": "Manual mode analog scale",
                    "properties": {
                        "max": {
                            "type": "number"
                        },
                        "min": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "max",
                        "min"
                    ],
                    "type": "object"
                },
                "controls": {
                    "items": {
                        "anyOf": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "analogScaleDependant": {
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "analogScaleDependant",
                                    "name"
                                ],
                                "type": "object"
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "type": "array"
                },
                "incompatibility": {
                    "description": "Incompatibilities between manual modes",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Name of the manual mode can contain 1 `#` for categorizing",
                    "type": "string"
                },
                "requires": {
                    "description": "Manual modes required to be enabled",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "watchdog": {
                    "description": "Watchdog Security chain",
                    "items": {
                        "$ref": "#/definitions/IManualWatchdogCondition"
                    },
                    "type": "array"
                }
            },
            "required": [
                "controls",
                "name"
            ],
            "type": "object"
        },
        "IConfigPassive": {
            "additionalProperties": false,
            "properties": {
                "actuators": {
                    "additionalProperties": false,
                    "description": "Actuators used to reach target",
                    "properties": {
                        "minus": {
                            "anyOf": [
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "Actuators used to reach target when we are over target"
                        },
                        "plus": {
                            "anyOf": [
                                {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                {
                                    "type": "string"
                                }
                            ],
                            "description": "Actuators used to reach target when we are under target"
                        }
                    },
                    "required": [
                        "plus"
                    ],
                    "type": "object"
                },
                "internal": {
                    "description": "If a passive mode is internal, it means that it is hidden from user.",
                    "enum": [
                        true
                    ],
                    "type": "boolean"
                },
                "manualModes": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Manual modes triggered by this passive regulation"
                },
                "name": {
                    "description": "Passive name",
                    "type": "string"
                },
                "sensors": {
                    "anyOf": [
                        {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "description": "Sensors used to target"
                },
                "target": {
                    "description": "Passive target number",
                    "type": "number"
                }
            },
            "required": [
                "actuators",
                "name",
                "sensors",
                "target"
            ],
            "type": "object"
        },
        "IConfigSlot": {
            "additionalProperties": false,
            "description": "Slot definition used in config",
            "properties": {
                "callToAction": {
                    "description": "Call to action, For UI Purposes only",
                    "items": {
                        "$ref": "#/definitions/ICallToAction"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Slots name",
                    "type": "string"
                },
                "productOptions": {
                    "$ref": "#/definitions/ISlotProductOptions",
                    "description": "Production options, If this is set the slot become productable"
                },
                "sensors": {
                    "description": "Sensors available for this Slots",
                    "items": {
                        "$ref": "#/definitions/ISlotSensor"
                    },
                    "type": "array"
                },
                "type": {
                    "description": "Slot type",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "sensors",
                "type"
            ],
            "type": "object"
        },
        "IConstantParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "const"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "number"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "IConstantStringParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "conststr"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "IForLoopProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "currentIteration": {
                    "type": "number"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "for"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "blocks",
                "name",
                "params"
            ],
            "type": "object"
        },
        "IGroupProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "group"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks",
                        "description": "All the parameters blocks"
                    },
                    "type": "array"
                }
            },
            "required": [
                "blocks",
                "name"
            ],
            "type": "object"
        },
        "IIOProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "io"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IIOReadParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "io"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "IIfProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "falseBlocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "name": {
                    "enum": [
                        "if"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array"
                },
                "trueBlocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                }
            },
            "required": [
                "falseBlocks",
                "name",
                "params",
                "trueBlocks"
            ],
            "type": "object"
        },
        "IMaintenanceParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "maintenance"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "IMaintenanceProcedure": {
            "additionalProperties": false,
            "properties": {
                "steps": {
                    "description": "Array of procedure steps",
                    "items": {
                        "$ref": "#/definitions/IMaintenanceProcedureStep"
                    },
                    "type": "array"
                },
                "tools": {
                    "description": "Procedure Tools used",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                }
            },
            "required": [
                "steps",
                "tools"
            ],
            "type": "object"
        },
        "IMaintenanceProcedureStep": {
            "additionalProperties": false,
            "properties": {
                "media": {
                    "description": "Procedure step media array",
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Procedure step name",
                    "type": "string"
                }
            },
            "required": [
                "media",
                "name"
            ],
            "type": "object"
        },
        "IMaintenanceProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "maintenance"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IManualWatchdogCondition": {
            "additionalProperties": false,
            "properties": {
                "gateName": {
                    "description": "Gate name to control",
                    "type": "string"
                },
                "gateValue": {
                    "description": "Gate value required for the security",
                    "type": "number"
                }
            },
            "required": [
                "gateName",
                "gateValue"
            ],
            "type": "object"
        },
        "IMultiplyParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "multiply"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/INumericParameterBlock"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "INumericParameterBlock": {
            "anyOf": [
                {
                    "$ref": "#/definitions/IAdditionParameterBlock"
                },
                {
                    "$ref": "#/definitions/IConditionalParameterBlock"
                },
                {
                    "$ref": "#/definitions/IConstantParameterBlock"
                },
                {
                    "$ref": "#/definitions/IIOReadParameterBlock"
                },
                {
                    "$ref": "#/definitions/IMaintenanceParameterBlock"
                },
                {
                    "$ref": "#/definitions/IMultiplyParameterBlock"
                },
                {
                    "$ref": "#/definitions/IProfileParameterBlock"
                },
                {
                    "$ref": "#/definitions/IReverseParameterBlock"
                },
                {
                    "$ref": "#/definitions/ISlotLifetimeParameterBlock"
                },
                {
                    "$ref": "#/definitions/IVariableParameterBlock"
                }
            ],
            "description": "Parameter Blocks that return a number from data()"
        },
        "IOControllersTypes": {
            "enum": [
                "ex260sx",
                "wago"
            ],
            "type": "string"
        },
        "IOGateTypeName": {
            "enum": [
                "default",
                "mapped",
                "pt100",
                "um18"
            ],
            "type": "string"
        },
        "IPBRPremades": {
            "additionalProperties": false,
            "properties": {
                "cycle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                }
            },
            "required": [
                "cycle",
                "name",
                "profile"
            ],
            "type": "object"
        },
        "IPBRSCCheckChain": {
            "additionalProperties": false,
            "properties": {
                "io": {
                    "additionalProperties": false,
                    "properties": {
                        "gateName": {
                            "type": "string"
                        },
                        "gateValue": {
                            "type": "number"
                        }
                    },
                    "required": [
                        "gateName",
                        "gateValue"
                    ],
                    "type": "object"
                },
                "name": {
                    "enum": [
                        "io",
                        "parameter"
                    ],
                    "type": "string"
                },
                "parameter": {
                    "$ref": "#/definitions/IParameterBlocks",
                    "description": "All the parameters blocks"
                }
            },
            "required": [
                "name"
            ],
            "type": "object"
        },
        "IPBRStartCondition": {
            "additionalProperties": false,
            "properties": {
                "checkChain": {
                    "$ref": "#/definitions/IPBRSCCheckChain"
                },
                "conditionName": {
                    "type": "string"
                },
                "startOnly": {
                    "type": "boolean"
                }
            },
            "required": [
                "checkChain",
                "conditionName",
                "startOnly"
            ],
            "type": "object"
        },
        "IParameterBlocks": {
            "anyOf": [
                {
                    "$ref": "#/definitions/IAdditionParameterBlock"
                },
                {
                    "$ref": "#/definitions/IConditionalParameterBlock"
                },
                {
                    "$ref": "#/definitions/IConstantParameterBlock"
                },
                {
                    "$ref": "#/definitions/IConstantStringParameterBlock"
                },
                {
                    "$ref": "#/definitions/IIOReadParameterBlock"
                },
                {
                    "$ref": "#/definitions/IMaintenanceParameterBlock"
                },
                {
                    "$ref": "#/definitions/IMultiplyParameterBlock"
                },
                {
                    "$ref": "#/definitions/IProfileParameterBlock"
                },
                {
                    "$ref": "#/definitions/IReverseParameterBlock"
                },
                {
                    "$ref": "#/definitions/ISlotLifetimeParameterBlock"
                },
                {
                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                },
                {
                    "$ref": "#/definitions/IVariableParameterBlock"
                }
            ],
            "description": "All the parameters blocks"
        },
        "IPassiveProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "passive"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IPopup": {
            "additionalProperties": false,
            "properties": {
                "callToAction": {
                    "description": "Call to actions",
                    "items": {
                        "$ref": "#/definitions/ICallToAction"
                    },
                    "type": "array"
                },
                "message": {
                    "description": "i18n message, body of this popup",
                    "type": "string"
                },
                "title": {
                    "description": "i18n text, title of this pop up",
                    "type": "string"
                }
            },
            "required": [
                "message",
                "title"
            ],
            "type": "object"
        },
        "IProfileConfig": {
            "additionalProperties": false,
            "description": "Profile schema from configuration",
            "properties": {
                "id": {
                    "description": "Premade profile have id",
                    "type": "string"
                },
                "isOverwritable": {
                    "description": "Is the profile Overwritable ?",
                    "enum": [
                        false
                    ],
                    "type": "boolean"
                },
                "isPremade": {
                    "description": "Is the profile premade ?",
                    "enum": [
                        true
                    ],
                    "type": "boolean"
                },
                "isRemovable": {
                    "description": "Is the profile Removable ?",
                    "enum": [
                        false
                    ],
                    "type": "boolean"
                },
                "name": {
                    "description": "Name of the profile",
                    "type": "string"
                },
                "skeleton": {
                    "description": "Name of the referencing skeleton profile",
                    "type": "string"
                },
                "values": {
                    "$ref": "#/definitions/Record<string,number>",
                    "description": "Values of the profile"
                }
            },
            "required": [
                "name",
                "skeleton",
                "values"
            ],
            "type": "object"
        },
        "IProfileParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "profile"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "IProfileSkeleton": {
            "additionalProperties": false,
            "properties": {
                "fields": {
                    "description": "Fields definitions contained by this skeleton",
                    "items": {
                        "anyOf": [
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "floatMax": {
                                        "type": "number"
                                    },
                                    "floatMin": {
                                        "type": "number"
                                    },
                                    "floatStep": {
                                        "type": "number"
                                    },
                                    "name": {
                                        "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of the profile field",
                                        "enum": [
                                            "bool",
                                            "float",
                                            "int",
                                            "time"
                                        ],
                                        "type": "string"
                                    },
                                    "unity": {
                                        "description": "Unity of the profile field, it used for UI purposes only",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Value contained byt the profile field",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "floatMax",
                                    "floatMin",
                                    "floatStep",
                                    "name",
                                    "type",
                                    "value"
                                ],
                                "type": "object"
                            },
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of the profile field",
                                        "enum": [
                                            "bool",
                                            "float",
                                            "int",
                                            "time"
                                        ],
                                        "type": "string"
                                    },
                                    "unity": {
                                        "description": "Unity of the profile field, it used for UI purposes only",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Value contained byt the profile field",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "name",
                                    "type",
                                    "value"
                                ],
                                "type": "object"
                            },
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of the profile field",
                                        "enum": [
                                            "bool",
                                            "float",
                                            "int",
                                            "time"
                                        ],
                                        "type": "string"
                                    },
                                    "unity": {
                                        "description": "Unity of the profile field, it used for UI purposes only",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Value contained byt the profile field",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "name",
                                    "type",
                                    "value"
                                ],
                                "type": "object"
                            },
                            {
                                "additionalProperties": false,
                                "properties": {
                                    "name": {
                                        "description": "Name of the profile field can be splitted by category using a #. `ex: temperature#target`",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type of the profile field",
                                        "enum": [
                                            "bool",
                                            "float",
                                            "int",
                                            "time"
                                        ],
                                        "type": "string"
                                    },
                                    "units": {
                                        "items": {
                                            "enum": [
                                                "hours",
                                                "milliseconds",
                                                "minutes",
                                                "seconds"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    },
                                    "unity": {
                                        "description": "Unity of the profile field, it used for UI purposes only",
                                        "type": "string"
                                    },
                                    "value": {
                                        "description": "Value contained byt the profile field",
                                        "type": "number"
                                    }
                                },
                                "required": [
                                    "name",
                                    "type",
                                    "units",
                                    "value"
                                ],
                                "type": "object"
                            }
                        ],
                        "description": "Base profile types"
                    },
                    "type": "array"
                },
                "name": {
                    "description": "Identifier name of the skeleton",
                    "type": "string"
                }
            },
            "required": [
                "fields",
                "name"
            ],
            "type": "object"
        },
        "IProgram": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "profileRequired": {
                    "type": "boolean"
                },
                "startConditions": {
                    "items": {
                        "$ref": "#/definitions/IPBRStartCondition"
                    },
                    "type": "array"
                },
                "steps": {
                    "items": {
                        "$ref": "#/definitions/IProgramStep"
                    },
                    "type": "array"
                }
            },
            "required": [
                "name",
                "profileRequired",
                "startConditions",
                "steps"
            ],
            "type": "object"
        },
        "IProgramBlocks": {
            "anyOf": [
                {
                    "$ref": "#/definitions/IForLoopProgramBlock"
                },
                {
                    "$ref": "#/definitions/IGroupProgramBlock"
                },
                {
                    "$ref": "#/definitions/IIfProgramBlock"
                },
                {
                    "$ref": "#/definitions/IIOProgramBlock"
                },
                {
                    "$ref": "#/definitions/IMaintenanceProgramBlock"
                },
                {
                    "$ref": "#/definitions/IPassiveProgramBlock"
                },
                {
                    "$ref": "#/definitions/ISleepProgramBlock"
                },
                {
                    "$ref": "#/definitions/ISlotLoadProgramBlock"
                },
                {
                    "$ref": "#/definitions/ISlotUnloadProgramBlock"
                },
                {
                    "$ref": "#/definitions/IStartTimerProgramBlock"
                },
                {
                    "$ref": "#/definitions/IStopProgramBlock"
                },
                {
                    "$ref": "#/definitions/IStopTimerProgramBlock"
                },
                {
                    "$ref": "#/definitions/IVariableProgramBlock"
                },
                {
                    "$ref": "#/definitions/IWhileLoopProgramBlock"
                }
            ]
        },
        "IProgramStep": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "description": "Program blocks Array that is executed by this step",
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "duration": {
                    "$ref": "#/definitions/INumericParameterBlock",
                    "description": "Parameter block that indicates the estimated Step duration time"
                },
                "endBlocks": {
                    "description": "Program Blocks array that are executed at the end of a step",
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "isEnabled": {
                    "$ref": "#/definitions/INumericParameterBlock",
                    "description": "Parameter block that indicates if this step is enabled in the PBR flow"
                },
                "name": {
                    "description": "Program Step name",
                    "type": "string"
                },
                "runAmount": {
                    "$ref": "#/definitions/INumericParameterBlock",
                    "description": "Optional Parameter block that tells the PBR if this steps must be runt multiple times"
                },
                "startBlocks": {
                    "description": "Program Blocks array that are executed at the start of a step",
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                }
            },
            "required": [
                "blocks",
                "duration",
                "endBlocks",
                "isEnabled",
                "name",
                "startBlocks"
            ],
            "type": "object"
        },
        "IReverseParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "reverse"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": [
                        {
                            "$ref": "#/definitions/INumericParameterBlock"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": [
                        "string",
                        "number"
                    ]
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "ISleepProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "sleep"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "ISlotLifetimeParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "slotlife"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "ISlotLoadProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "slotLoad"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "ISlotProductOptions": {
            "additionalProperties": false,
            "description": "Slot product options",
            "properties": {
                "defaultProductSeries": {
                    "$ref": "#/definitions/EProductSeries",
                    "description": "Default product series"
                },
                "lifespan": {
                    "description": "Lifespan of the product in days if -1, no lifespan, count the life since the product hass been installed",
                    "type": "number"
                }
            },
            "required": [
                "defaultProductSeries",
                "lifespan"
            ],
            "type": "object"
        },
        "ISlotProductStatusParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "slotstatus"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "ISlotSensor": {
            "additionalProperties": false,
            "description": "Slot Sensor interface",
            "properties": {
                "io": {
                    "description": "IO gate name of this sensor",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/ESlotSensorType",
                    "description": "Slot type"
                }
            },
            "required": [
                "io",
                "type"
            ],
            "type": "object"
        },
        "ISlotUnloadProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "slotUnload"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IStartTimerProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "startTimer"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                }
            },
            "required": [
                "blocks",
                "name",
                "params"
            ],
            "type": "object"
        },
        "IStopProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "stop"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IStopTimerProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "stopTimer"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        }
                    ],
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IVariableParameterBlock": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Parameter block name",
                    "enum": [
                        "variable"
                    ],
                    "type": "string"
                },
                "params": {
                    "description": "Parameter block sub parameters blocks",
                    "items": {
                        "$ref": "#/definitions/IParameterBlocks"
                    },
                    "type": "array"
                },
                "value": {
                    "description": "Value from this parameter block",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "value"
            ],
            "type": "object"
        },
        "IVariableProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "variable"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 2,
                    "minItems": 2,
                    "type": "array"
                }
            },
            "required": [
                "name",
                "params"
            ],
            "type": "object"
        },
        "IWhileLoopProgramBlock": {
            "additionalProperties": false,
            "properties": {
                "blocks": {
                    "items": {
                        "$ref": "#/definitions/IProgramBlocks"
                    },
                    "type": "array"
                },
                "executed": {
                    "type": "boolean"
                },
                "name": {
                    "enum": [
                        "while"
                    ],
                    "type": "string"
                },
                "params": {
                    "items": [
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        },
                        {
                            "anyOf": [
                                {
                                    "$ref": "#/definitions/IConstantStringParameterBlock"
                                },
                                {
                                    "$ref": "#/definitions/ISlotProductStatusParameterBlock"
                                }
                            ],
                            "description": "Parameters Blocks that return a string value from data()"
                        },
                        {
                            "$ref": "#/definitions/INumericParameterBlock",
                            "description": "Parameter Blocks that return a number from data()"
                        }
                    ],
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array"
                }
            },
            "required": [
                "blocks",
                "name",
                "params"
            ],
            "type": "object"
        },
        "Record<string,number>": {
            "additionalProperties": false,
            "type": "object"
        }
    },
    "description": "Machine JSON Specifications",
    "properties": {
        "$schema": {
            "description": "Schema used by the configuration file",
            "type": "string"
        },
        "addons": {
            "description": "Addons available on this machine",
            "items": {
                "$ref": "#/definitions/IAddon"
            },
            "type": "array"
        },
        "cyclePremades": {
            "description": "Cycle premades definition",
            "items": {
                "$ref": "#/definitions/IPBRPremades"
            },
            "type": "array"
        },
        "cycleTypes": {
            "description": "Cycle types definition",
            "items": {
                "$ref": "#/definitions/IProgram"
            },
            "type": "array"
        },
        "iogates": {
            "description": "IOGates definition",
            "items": {
                "anyOf": [
                    {
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "description": "Address on the automaton address range",
                                "type": "number"
                            },
                            "bus": {
                                "description": "Gate bus",
                                "enum": [
                                    "in",
                                    "out"
                                ],
                                "type": "string"
                            },
                            "controllerId": {
                                "description": "Automaton where this gate is available",
                                "type": "number"
                            },
                            "default": {
                                "description": "Default value of this gate",
                                "type": "number"
                            },
                            "mapInMax": {
                                "description": "Mapped input max data, from IOController",
                                "type": "number"
                            },
                            "mapInMin": {
                                "description": "Mapped input min data, from IO Controller",
                                "type": "number"
                            },
                            "mapOutMax": {
                                "description": "Mapped output max data, to Human",
                                "type": "number"
                            },
                            "mapOutMin": {
                                "description": "Mapped output min data, to Human",
                                "type": "number"
                            },
                            "name": {
                                "description": "Gate name",
                                "type": "string"
                            },
                            "size": {
                                "description": "Gate controller data size",
                                "enum": [
                                    "bit",
                                    "word"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/definitions/IOGateTypeName",
                                "description": "Gate type"
                            },
                            "unity": {
                                "description": "Unity used by this gate",
                                "type": "string"
                            }
                        },
                        "required": [
                            "address",
                            "bus",
                            "controllerId",
                            "default",
                            "mapOutMax",
                            "mapOutMin",
                            "name",
                            "size",
                            "type"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "description": "Address on the automaton address range",
                                "type": "number"
                            },
                            "bus": {
                                "description": "Gate bus",
                                "enum": [
                                    "in",
                                    "out"
                                ],
                                "type": "string"
                            },
                            "controllerId": {
                                "description": "Automaton where this gate is available",
                                "type": "number"
                            },
                            "default": {
                                "description": "Default value of this gate",
                                "type": "number"
                            },
                            "levelMax": {
                                "type": "number"
                            },
                            "name": {
                                "description": "Gate name",
                                "type": "string"
                            },
                            "size": {
                                "description": "Gate controller data size",
                                "enum": [
                                    "bit",
                                    "word"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/definitions/IOGateTypeName",
                                "description": "Gate type"
                            },
                            "unity": {
                                "description": "Unity used by this gate",
                                "type": "string"
                            }
                        },
                        "required": [
                            "address",
                            "bus",
                            "controllerId",
                            "default",
                            "levelMax",
                            "name",
                            "size",
                            "type"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "description": "Address on the automaton address range",
                                "type": "number"
                            },
                            "bus": {
                                "description": "Gate bus",
                                "enum": [
                                    "in",
                                    "out"
                                ],
                                "type": "string"
                            },
                            "controllerId": {
                                "description": "Automaton where this gate is available",
                                "type": "number"
                            },
                            "default": {
                                "description": "Default value of this gate",
                                "type": "number"
                            },
                            "name": {
                                "description": "Gate name",
                                "type": "string"
                            },
                            "size": {
                                "description": "Gate controller data size",
                                "enum": [
                                    "bit",
                                    "word"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/definitions/IOGateTypeName",
                                "description": "Gate type"
                            },
                            "unity": {
                                "description": "Unity used by this gate",
                                "type": "string"
                            }
                        },
                        "required": [
                            "address",
                            "bus",
                            "controllerId",
                            "default",
                            "name",
                            "size",
                            "type",
                            "unity"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "address": {
                                "description": "Address on the automaton address range",
                                "type": "number"
                            },
                            "bus": {
                                "description": "Gate bus",
                                "enum": [
                                    "in",
                                    "out"
                                ],
                                "type": "string"
                            },
                            "controllerId": {
                                "description": "Automaton where this gate is available",
                                "type": "number"
                            },
                            "default": {
                                "description": "Default value of this gate",
                                "type": "number"
                            },
                            "name": {
                                "description": "Gate name",
                                "type": "string"
                            },
                            "size": {
                                "description": "Gate controller data size",
                                "enum": [
                                    "bit",
                                    "word"
                                ],
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/definitions/IOGateTypeName",
                                "description": "Gate type"
                            },
                            "unity": {
                                "description": "Unity used by this gate",
                                "type": "string"
                            }
                        },
                        "required": [
                            "address",
                            "bus",
                            "controllerId",
                            "default",
                            "name",
                            "size",
                            "type"
                        ],
                        "type": "object"
                    }
                ]
            },
            "type": "array"
        },
        "iohandlers": {
            "description": "IOHandler definitions",
            "items": {
                "anyOf": [
                    {
                        "additionalProperties": false,
                        "properties": {
                            "ip": {
                                "description": "IP Address on the local network",
                                "type": "string"
                            },
                            "size": {
                                "description": "Corresponding size of the EX260 (either 16 outputs or 32 outputs)",
                                "enum": [
                                    16,
                                    32
                                ],
                                "type": "number"
                            },
                            "type": {
                                "$ref": "#/definitions/IOControllersTypes",
                                "description": "Type of the IO Handler"
                            }
                        },
                        "required": [
                            "ip",
                            "size",
                            "type"
                        ],
                        "type": "object"
                    },
                    {
                        "additionalProperties": false,
                        "properties": {
                            "ip": {
                                "description": "IP Address on the local network",
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/definitions/IOControllersTypes",
                                "description": "Type of the IO Handler"
                            }
                        },
                        "required": [
                            "ip",
                            "type"
                        ],
                        "type": "object"
                    }
                ]
            },
            "type": "array"
        },
        "maintenance": {
            "description": "Maintenance tasks definition",
            "items": {
                "$ref": "#/definitions/IConfigMaintenance"
            },
            "type": "array"
        },
        "manual": {
            "description": "Manuals modes definition",
            "items": {
                "$ref": "#/definitions/IConfigManualMode"
            },
            "type": "array"
        },
        "nuster": {
            "additionalProperties": false,
            "description": "Nuster Additional data",
            "properties": {
                "connectPopup": {
                    "$ref": "#/definitions/IPopup",
                    "description": "Connect popup is triggered when the user logs on for the first time"
                }
            },
            "type": "object"
        },
        "passives": {
            "description": "Passive modes definition",
            "items": {
                "$ref": "#/definitions/IConfigPassive"
            },
            "type": "array"
        },
        "profilePremades": {
            "description": "Premade profile definition",
            "items": {
                "$ref": "#/definitions/IProfileConfig"
            },
            "type": "array"
        },
        "profileSkeletons": {
            "description": "Profile skeletons definition",
            "items": {
                "$ref": "#/definitions/IProfileSkeleton"
            },
            "type": "array"
        },
        "slots": {
            "description": "Product slots definition",
            "items": {
                "$ref": "#/definitions/IConfigSlot"
            },
            "type": "array"
        }
    },
    "required": [
        "$schema",
        "cyclePremades",
        "cycleTypes",
        "iogates",
        "iohandlers",
        "maintenance",
        "manual",
        "passives",
        "profilePremades",
        "profileSkeletons",
        "slots"
    ],
    "type": "object"
}

